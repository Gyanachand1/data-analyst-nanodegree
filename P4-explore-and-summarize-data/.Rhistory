}
ggduo(
redwines,
columnsX = "quality",
columnsY = cols_names,
#mapping = aes(color = quality.cat),
types = list(continuous = wrap(lm_with_cor, alpha = 0.25, position = 'jitter', aes(color= quality.cat))),
showStrips = FALSE,
#title = "Between Academic and Psychological Variable Correlation",
#xlab = "Psychological",
#ylab = "Academic",
#legend = c(5,2)
) +
theme(legend.position = "bottom")
psych <- read.csv("http://www.ats.ucla.edu/stat/data/mmreg.csv")
colnames(psych) <- c("Control", "Concept", "Motivation", "Read", "Write", "Math", "Science", "Sex")
psych <- data.frame(
Motivation = psych$Motivation,
Self.Concept = psych$Concept,
Locus.of.Control = psych$Control,
Read = psych$Read,
Write = psych$Write,
Math = psych$Math,
Science = psych$Science,
Sex = c("0" = "Male", "1" = "Female")[as.character(psych$Sex)]
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- data[[deparse(mapping$x)]]
y <- data[[deparse(mapping$y)]]
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, color = NULL),
hjust = 0, vjust = 1,
size = 5, fontface = "bold"
)
}
ggduo(
redwines,
columnsX = "quality",
columnsY = cols_names,
#mapping = aes(color = quality.cat),
types = list(continuous = wrap(lm_with_cor, alpha = 0.25, position = 'jitter', mapping=
showStrips = FALSE,
#title = "Between Academic and Psychological Variable Correlation",
#xlab = "Psychological",
#ylab = "Academic",
#legend = c(5,2)
) +
theme(legend.position = "bottom")
psych <- read.csv("http://www.ats.ucla.edu/stat/data/mmreg.csv")
colnames(psych) <- c("Control", "Concept", "Motivation", "Read", "Write", "Math", "Science", "Sex")
psych <- data.frame(
Motivation = psych$Motivation,
Self.Concept = psych$Concept,
Locus.of.Control = psych$Control,
Read = psych$Read,
Write = psych$Write,
Math = psych$Math,
Science = psych$Science,
Sex = c("0" = "Male", "1" = "Female")[as.character(psych$Sex)]
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- data[[deparse(mapping$x)]]
y <- data[[deparse(mapping$y)]]
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, color = NULL),
hjust = 0, vjust = 1,
size = 5, fontface = "bold"
)
}
ggduo(
redwines,
columnsX = "quality",
columnsY = cols_names,
#mapping = aes(color = quality.cat),
types = list(continuous = wrap(lm_with_cor, alpha = 0.25, position = 'jitter', mapping= aes(color= quality.cat))),
showStrips = FALSE,
#title = "Between Academic and Psychological Variable Correlation",
#xlab = "Psychological",
#ylab = "Academic",
#legend = c(5,2)
) +
theme(legend.position = "bottom")
ggduo(
redwines,
columnsX = "quality",
columnsY = cols_names,
#mapping = aes(color = quality.cat),
types = list(continuous = wrap(lm_with_cor, alpha = 0.25, position = 'jitter', mapping= aes(color= quality.cat))),
showStrips = FALSE
#title = "Between Academic and Psychological Variable Correlation",
#xlab = "Psychological",
#ylab = "Academic",
#legend = c(5,2)
) +
theme(legend.position = "bottom")
psych <- read.csv("http://www.ats.ucla.edu/stat/data/mmreg.csv")
colnames(psych) <- c("Control", "Concept", "Motivation", "Read", "Write", "Math", "Science", "Sex")
psych <- data.frame(
Motivation = psych$Motivation,
Self.Concept = psych$Concept,
Locus.of.Control = psych$Control,
Read = psych$Read,
Write = psych$Write,
Math = psych$Math,
Science = psych$Science,
Sex = c("0" = "Male", "1" = "Female")[as.character(psych$Sex)]
)
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- data[[deparse(mapping$x)]]
y <- data[[deparse(mapping$y)]]
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, color = NULL),
hjust = 0, vjust = 1,
size = 5, fontface = "bold"
)
}
ggduo(
redwines,
columnsX = "quality",
columnsY = cols_names,
#mapping = aes(color = quality.cat),
types = list(continuous = wrap(lm_with_cor, alpha = 0.25, position = 'jitter', mapping= aes(color= quality.cat))),
showStrips = FALSE
#title = "Between Academic and Psychological Variable Correlation",
#xlab = "Psychological",
#ylab = "Academic",
#legend = c(5,2)
) +
theme(legend.position = "bottom")
lm_with_cor <- function(data, mapping, ..., method = "pearson") {
x <- data[[deparse(mapping$x)]]
y <- data[[deparse(mapping$y)]]
cor <- cor(x, y, method = method)
ggally_smooth_lm(data, mapping, ...) +
ggplot2::geom_label(
data = data.frame(
x = min(x, na.rm = TRUE),
y = max(y, na.rm = TRUE),
lab = round(cor, digits = 3)
),
mapping = ggplot2::aes(x = x, y = y, label = lab, color = NULL),
hjust = 0, vjust = 1,
size = 5, fontface = "bold"
)
}
ggduo(
redwines,
columnsX = "quality",
columnsY = cols_names,
#mapping = aes(color = quality.cat),
types = list(continuous = wrap(lm_with_cor, alpha = 0.25, position = 'jitter', mapping= aes(color= quality.cat))),
showStrips = FALSE
#title = "Between Academic and Psychological Variable Correlation",
#xlab = "Psychological",
#ylab = "Academic",
#legend = c(5,2)
) +
theme(legend.position = "bottom")
ggplot(data)+ geom_point()+ facet_grid(quality ~ ., scales = "free_y")
ggplot(data)+ geom_point()+ facet_grid(quality ~ ., scales = "free_y")
ggplot(redwines)+ geom_point()+ facet_grid(quality ~ ., scales = "free_y")
ggplot(redwines)+ geom_point(aes(x= quality))+ facet_grid(quality ~ ., scales = "free_y")
ggplot(redwines)+ facet_grid(quality ~ ., scales = "free_y")
ggplot(redwines)+ facet_grid(cols_names ~ quality, scales = "free_y")
ggplot(redwines)+ facet_grid(cols_names ~ quality.cat, scales = "free_y")
ggplot(redwines) + geom_qq(aes(x=quality))+ facet_grid(cols_names ~ quality.cat, scales = "free_y")
ggplot(redwines) + geom_qq(aes(x=quality))+ facet_grid(. ~ quality.cat, scales = "free_y")
ggplot(redwines) + geom_qq(aes(sample=quality))+ facet_grid(. ~ quality.cat, scales = "free_y")
ggplot(redwines) + geom_qq(aes(sample=quality))+ facet_grid(quality.cat ~ ., scales = "free_y")
mtcars %>%
gather(-redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
mtcars %>%
gather(-redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
mtcars %>%
gather(-redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
library(magrittr)
mtcars %>%
gather(-redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
mtcars %>%
gather(-redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
mtcars %>%
gather(-redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
mtcars %>%
gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
mtcars %>%
gather(redwines, key = "var", value = "value") %>%
ggplot(aes(x = value, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
mtcars %>%
gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
mtcars %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines_quality %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
redwines_qualirt
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
redwines_qualirt
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = redwines)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(~ var, scales = "free") +
theme_bw()
cols_names
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(~ cols_names, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(-~ cols_names, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
ggplot(data = redwines,aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
ggplot(data = redwines,aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(quality~ cols_names, scales = "free") +
theme_bw()
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
ggplot(data = redwines,aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(quality~ cols_names, scales = "free") +
theme_bw()
ggplot() + facet_wrap(~ cols_names) +
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
ggplot(data = redwines,aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(quality~ cols_names, scales = "free") +
theme_bw()
ggplot() + facet_wrap(~ cols_names)
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
ggplot(data = redwines,aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(quality~ cols_names, scales = "free") +
theme_bw()
ggplot() + facet_wrap(. ~ cols_names)
##https://cran.r-project.org/web/packages/magrittr/vignettes/magrittr.html
library(magrittr)
library(dplyr)
library(tidyr)
redwines %>%
#gather(redwines, key = "var", value = "quality") %>%
ggplot(aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(.~ cols_names, scales = "free") +
theme_bw()
ggplot(data = redwines,aes(x = quality, y = cols_names)) +
geom_point() +
stat_smooth() +
facet_wrap(quality~ cols_names, scales = "free") +
theme_bw()
ggplot(redwines) + facet_wrap(. ~ cols_names)
melt(redwines,"quality")
library(reshape2)
melt(redwines,quality)
library(reshape2)
melt(redwines, "quality")
library(reshape2)
melted_rw <- melt(redwines, "quality")
ggduo(data = redwines, mapping = NULL, columnsX = "quality", columnsY = cols_names,
#title = "", types = list(continuous = "smooth_loess", comboVertical = "box",
comboHorizontal = "facethist", discrete  = "ratio"), axisLabels = c("show", "none"), columnLabelsX = colnames(data[columnsX]), columnLabelsY = colnames(data[columnsY]), showStrips = NULL, legends = FALSE)
ggduo(data = redwines, mapping = NULL, columnsX = "quality", columnsY = cols_names)
ggfacet(data = redwines, mapping = NULL, columnsY = "quality", columnsX = cols_names)
ggfacet(data = redwines, mapping = NULL, columnsX = "quality", columnsY = cols_names)
ggfacet(data = redwines, mapping = NULL, columnsY = "quality", columnsX = cols_names)
ggfacet(data = redwines, mapping = NULL, columnsY = "quality", columnsX = cols_names, scales="free_x")
ggfacet(data = redwines, mapping = NULL, columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = NULL, columnsX = "quality", columnsY = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = NULL, columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = "quality.cat", columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = quality.cat, columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = "quality.cat", columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = aes(color="quality.cat"), columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = aes(color=quality.cat), columnsY = "quality", columnsX = cols_names, scales="free_y")
ggfacet(data = redwines, mapping = aes(color=quality.cat), columnsY = "quality", columnsX = cols_names, scales="free_x")
ggfacet(data = redwines, mapping = aes(color=quality.cat), columnsY = "quality", columnsX = cols_names, scales="free_x", types = list(continuous = "points")))
ggfacet(data = redwines, mapping = aes(color=quality.cat), columnsY = "quality", columnsX = cols_names, scales="free_x", types = list(continuous = "points"))
